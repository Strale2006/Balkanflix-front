[{"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\index.js":"1","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\App.js":"2","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\reportWebVitals.js":"3","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\routing\\PrivateRoute.js":"4","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\LoginScreen.js":"5","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\ForgotPasswordScreen.js":"6","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\PrivateScreen.js":"7","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\RegisterScreen.js":"8","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\ResetPasswordScreen.js":"9","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\VerifyEmail.js":"10","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\SendVerificationEmail.js":"11","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\chat\\pages\\Room.jsx":"12","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\chat\\appwriteConfig.js":"13","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\chat\\utils\\AuthContext.jsx":"14"},{"size":343,"mtime":1697907679285,"results":"15","hashOfConfig":"16"},{"size":1698,"mtime":1697988870555,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1697459966878,"results":"18","hashOfConfig":"16"},{"size":283,"mtime":1697987919773,"results":"19","hashOfConfig":"16"},{"size":2618,"mtime":1697459966851,"results":"20","hashOfConfig":"16"},{"size":2264,"mtime":1697459966848,"results":"21","hashOfConfig":"16"},{"size":6519,"mtime":1697459966854,"results":"22","hashOfConfig":"16"},{"size":3316,"mtime":1697459966857,"results":"23","hashOfConfig":"16"},{"size":3506,"mtime":1697459966863,"results":"24","hashOfConfig":"16"},{"size":778,"mtime":1697459966869,"results":"25","hashOfConfig":"16"},{"size":3348,"mtime":1697459966867,"results":"26","hashOfConfig":"16"},{"size":3818,"mtime":1697984297973,"results":"27","hashOfConfig":"16"},{"size":421,"mtime":1697966211404,"results":"28","hashOfConfig":"16"},{"size":586,"mtime":1697989106267,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m24y2w",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\index.js",[],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\App.js",["76"],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\routing\\PrivateRoute.js",[],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\LoginScreen.js",[],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\ForgotPasswordScreen.js",[],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\PrivateScreen.js",["77","78"],[],"import {useState, useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport './PrivateScreen.css'\r\nimport '../../index.css'\r\n\r\n\r\n\r\nconst PrivateScreen = () =>{\r\n\r\n    const history = useNavigate();\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [privateData, setPrivateData] = useState(\"\");\r\n    const [isVerified, setIsVerified] = useState(true);\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [taskTitle, setTaskTitle] = useState(\"\");\r\n    const [tasks, setTasks] = useState([]);\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setTaskTitle(event.target.value);\r\n    };\r\n\r\n\r\n\r\n    const handleProfileClick = () => {\r\n        setIsMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const newTasks = [...tasks, taskTitle];\r\n        setTasks(newTasks);\r\n        setTaskTitle(\"\");\r\n        closeModal();\r\n\r\n        //Dodavanje taska u bazu\r\n        try {\r\n            await axios.put('/api/auth/tasks', { userId: privateData.id, tasks: newTasks });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (index) => {\r\n        const newTasks = [...tasks];\r\n        newTasks.splice(index, 1);\r\n        setTasks(newTasks);\r\n\r\n        //Brisanje taska iz baze\r\n        try {\r\n            await axios.put('/api/auth/tasks', { userId: privateData.id, tasks: newTasks });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"authToken\")){\r\n            history(\"/login\");\r\n        }\r\n\r\n        const fetchPrivateData = async () => {\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\r\n                }\r\n            }\r\n\r\n            try {\r\n                const {data} = await axios.get(\"/api/private\", config);\r\n                setPrivateData(data);\r\n                setIsVerified(data.isVerified);\r\n\r\n                const taskData = await axios.get(`/api/auth/tasks/${data.id}`);\r\n                console.log(taskData)\r\n\r\n                if (Array.isArray(taskData.data.data)) {\r\n                    setTasks(taskData.data.data);\r\n                } else {\r\n                    console.error('Tasks data is not an array:', taskData);\r\n                    setTasks([]); // Postavite tasks na prazan niz\r\n                }\r\n            }catch (e) {\r\n                localStorage.removeItem(\"authToken\");\r\n                setError(\"You are not authorized, please login\");\r\n            }\r\n        }\r\n\r\n        fetchPrivateData().then().catch(error => {\r\n            console.log(\"Error:\", error);\r\n        });\r\n    }, [history]);\r\n\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem(\"authToken\");\r\n        history(\"/login\");\r\n    }\r\n\r\n    const lordIconStyle = {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n    }\r\n\r\n    return (\r\n        <div className=\"to-do__screen\">\r\n            {error && <span className=\"error-message\">{error}</span>}\r\n            {isVerified===false && <span className=\"error-message\">Please verify your email. <Link to=\"/sendVerificationEmail\">Send verification email</Link></span>}\r\n\r\n            <div className=\"content-header\">\r\n                <h1>Website To-Do</h1>\r\n                <div className=\"user-profile\">\r\n                    <h2 className=\"verification-screen_title\">Hi, {privateData.username} </h2>\r\n                    <div className=\"profile\" onClick={handleProfileClick}>\r\n                        <div className=\"pfp-holder\">\r\n                            <div className=\"pfp\"></div>\r\n                        </div>\r\n\r\n                        {isMenuOpen && (\r\n                            <div className={`dropdown-menu ${isMenuOpen ? 'show' : ''}`}>\r\n                                <a>Profile</a>\r\n                                <a onClick={logoutHandler}>Log Out</a>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"content\">\r\n                <div className=\"header\">\r\n                    <h1>TO-DO</h1>\r\n                </div>\r\n                <div className=\"task-container\">\r\n                {tasks.length === 0 ? (\r\n                    <span className=\"no-tasks\">No tasks found.</span>\r\n                ) : (\r\n                    tasks.map((task, index) => (\r\n                        <div className='task' key={index}>\r\n                            <h1>{task}</h1>\r\n                            <lord-icon\r\n                                src=\"https://cdn.lordicon.com/exkbusmy.json\"\r\n                                trigger=\"click\"\r\n                                colors=\"outline:#121331,primary:#646e78,secondary:#545454,tertiary:#ebe6ef\"\r\n                                stroke=\"100\"\r\n                                state=\"hover-empty\"\r\n                                style={lordIconStyle}\r\n                                onClick={() => handleDelete(index)}>\r\n                            </lord-icon>\r\n                        </div>\r\n                    ))\r\n                )}\r\n                </div>\r\n\r\n                <button className='new-btn'>\r\n                    <h2 onClick={openModal}>+ NEW TASK</h2>\r\n                </button>\r\n\r\n                {isModalOpen && (\r\n                    <div className=\"modal\">\r\n                        <div className=\"modal-background\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <h1>Task title</h1>\r\n                                <input required className='task-input' type=\"text\" maxLength='30' placeholder='Task title...' value={taskTitle} onChange={handleInputChange} />\r\n                                <button className='task-button' type=\"submit\">Submit</button>\r\n                            </form>\r\n                            <button className='task-button' onClick={closeModal}>Close</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateScreen;\r\n","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\RegisterScreen.js",[],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\ResetPasswordScreen.js",[],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\VerifyEmail.js",["79"],[],"import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction VerifyEmail() {\r\n  const { verificationToken } = useParams();\r\n\r\n  const history = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const verifyEmail = async () => {\r\n      try {\r\n        await axios.get(`http://localhost:3000/api/auth/verifyEmail/${verificationToken}`);\r\n        alert('Email verified');\r\n        history('/');\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('An error occurred');\r\n      }\r\n    };\r\n\r\n    verifyEmail().then(r => console.log(r));\r\n  }, [verificationToken]);\r\n\r\n  return <div>Email verification in progress...</div>;\r\n}\r\n\r\nexport default VerifyEmail;","C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\components\\screens\\SendVerificationEmail.js",[],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\chat\\pages\\Room.jsx",["80"],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\chat\\appwriteConfig.js",[],[],"C:\\Users\\Mijat\\Desktop\\projects\\BalkanFlix\\BalkanFlix\\Balkanflix-front\\src\\chat\\utils\\AuthContext.jsx",["81","82","83","84","85"],[],"import { createContext, useState, useEffect} from \"react\";\r\n\r\nconst authContext = createContext()\r\n\r\nexport const authProvider = ({children}) => {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [user, setUser] = useState(null)\r\n\r\n    const contextData = {\r\n        user,\r\n        setUser,\r\n        loading,\r\n        setLoading\r\n    }\r\n\r\n    return <authContext.Provider value={contextData}>\r\n        {loading ? <p>Loading...</p> : children}\r\n    </authContext.Provider>\r\n}\r\n\r\nexport const userAuth = () => {return useContext(authContext)}\r\n\r\nexport default authContext",{"ruleId":"86","severity":1,"message":"87","line":16,"column":10,"nodeType":"88","messageId":"89","endLine":16,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":133,"column":33,"nodeType":"92","endLine":133,"endColumn":36},{"ruleId":"90","severity":1,"message":"91","line":134,"column":33,"nodeType":"92","endLine":134,"endColumn":60},{"ruleId":"93","severity":1,"message":"94","line":24,"column":6,"nodeType":"95","endLine":24,"endColumn":25,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":34,"column":8,"nodeType":"95","endLine":34,"endColumn":10,"suggestions":"98"},{"ruleId":"86","severity":1,"message":"99","line":1,"column":35,"nodeType":"88","messageId":"89","endLine":1,"endColumn":44},{"ruleId":"100","severity":2,"message":"101","line":7,"column":35,"nodeType":"88","endLine":7,"endColumn":43},{"ruleId":"100","severity":2,"message":"101","line":9,"column":29,"nodeType":"88","endLine":9,"endColumn":37},{"ruleId":"100","severity":2,"message":"102","line":23,"column":39,"nodeType":"88","endLine":23,"endColumn":49},{"ruleId":"103","severity":2,"message":"104","line":23,"column":39,"nodeType":"88","messageId":"105","endLine":23,"endColumn":49},"no-unused-vars","'AuthProvider' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["107"],"'useEffect' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"authProvider\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useContext\" is called in function \"userAuth\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","no-undef","'useContext' is not defined.","undef",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [history, verificationToken]",{"range":"112","text":"113"},"Update the dependencies array to be: [messages]",{"range":"114","text":"115"},[665,684],"[history, verificationToken]",[1245,1247],"[messages]"]