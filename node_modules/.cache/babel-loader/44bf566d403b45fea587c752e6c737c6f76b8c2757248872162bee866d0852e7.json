{"ast":null,"code":"var _jsxFileName = \"D:\\\\1. Programiranje\\\\Web projekti\\\\Auth-System\\\\client\\\\src\\\\components\\\\screens\\\\ResetPasswordScreen.js\",\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom'; // Import useParams\n\nimport \"./ResetPasswordScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordScreen = ({\n  match\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const resetPasswordHandler = async e => {\n    _s();\n    e.preventDefault();\n    const {\n      resetToken\n    } = useParams();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords don't match\");\n    }\n    try {\n      const {\n        data\n      } = await axios.put(`/api/auth/passwordreset/${match.params.resetToken}`, {\n        password\n      }, config);\n      console.log(data);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n  _s(resetPasswordHandler, \"Jf5Ui1Qs6E9kEhYFwGhPyzjr9QA=\", false, function () {\n    return [useParams];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetpassword-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: resetPasswordHandler,\n      className: \"resetpassword-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"resetpassword-screen__title\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"success-message\",\n        children: [success, \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"password\",\n          placeholder: \"Enter new password\",\n          autoComplete: \"true\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"confirmpassword\",\n          placeholder: \"Confirm new password\",\n          autoComplete: \"true\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s2(ResetPasswordScreen, \"imNu7i+cu64rhW3fm3LuJad5BNU=\");\n_c = ResetPasswordScreen;\nexport default ResetPasswordScreen;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"names":["useState","Link","axios","useParams","jsxDEV","_jsxDEV","ResetPasswordScreen","match","_s2","_s","$RefreshSig$","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","resetPasswordHandler","e","preventDefault","resetToken","config","headers","setTimeout","data","put","params","console","log","response","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","to","htmlFor","type","required","id","placeholder","autoComplete","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/1. Programiranje/Web projekti/Auth-System/client/src/components/screens/ResetPasswordScreen.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useParams } from 'react-router-dom'; // Import useParams\r\n\r\n\r\nimport \"./ResetPasswordScreen.css\";\r\n\r\nconst ResetPasswordScreen = ({ match }) => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const resetPasswordHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { resetToken } = useParams();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        if (password !== confirmPassword) {\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n            return setError(\"Passwords don't match\");\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.put(\r\n                `/api/auth/passwordreset/${match.params.resetToken}`,\r\n                {\r\n                    password,\r\n                },\r\n                config\r\n            );\r\n\r\n            console.log(data);\r\n            setSuccess(data.data);\r\n        } catch (error) {\r\n            setError(error.response.data.error);\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"resetpassword-screen\">\r\n            <form\r\n                onSubmit={resetPasswordHandler}\r\n                className=\"resetpassword-screen__form\"\r\n            >\r\n                <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\r\n                {error && <span className=\"error-message\">{error} </span>}\r\n                {success && (\r\n                    <span className=\"success-message\">\r\n            {success} <Link to=\"/login\">Login</Link>\r\n          </span>\r\n                )}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">New Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        required\r\n                        id=\"password\"\r\n                        placeholder=\"Enter new password\"\r\n                        autoComplete=\"true\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        required\r\n                        id=\"confirmpassword\"\r\n                        placeholder=\"Confirm new password\"\r\n                        autoComplete=\"true\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Reset Password\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPasswordScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}