{"ast":null,"code":"var _jsxFileName = \"D:\\\\1. Programiranje\\\\Web projekti\\\\Auth-System\\\\client\\\\src\\\\components\\\\screens\\\\ResetPasswordScreen.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./ResetPasswordScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordScreen = ({\n  match\n}) => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const resetPasswordHandler = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords don't match\");\n    }\n    const currentUrl = window.location.href;\n    const segments = currentUrl.split('/');\n    const token = segments[segments.length - 1];\n    try {\n      alert(111);\n      const {\n        data\n      } = await axios.put(`http://localhost:5000/api/auth/resetpassword/${token}`, {\n        password\n      }, config);\n      console.log(data);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetpassword-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: resetPasswordHandler,\n      className: \"resetpassword-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"resetpassword-screen__title\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"success-message\",\n        children: [success, \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"password\",\n          placeholder: \"Enter new password\",\n          autoComplete: \"true\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"confirmpassword\",\n          placeholder: \"Confirm new password\",\n          autoComplete: \"true\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPasswordScreen, \"imNu7i+cu64rhW3fm3LuJad5BNU=\");\n_c = ResetPasswordScreen;\nexport default ResetPasswordScreen;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"names":["useState","Link","axios","jsxDEV","_jsxDEV","ResetPasswordScreen","match","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","resetPasswordHandler","e","preventDefault","config","headers","setTimeout","currentUrl","window","location","href","segments","split","token","length","alert","data","put","console","log","response","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","to","htmlFor","type","required","id","placeholder","autoComplete","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/1. Programiranje/Web projekti/Auth-System/client/src/components/screens/ResetPasswordScreen.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nimport \"./ResetPasswordScreen.css\";\r\n\r\nconst ResetPasswordScreen = ({ match }) => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const resetPasswordHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        if (password !== confirmPassword) {\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n            return setError(\"Passwords don't match\");\r\n        }\r\n        const currentUrl = window.location.href;\r\n        const segments = currentUrl.split('/');\r\n        const token = segments[segments.length - 1];\r\n        try {\r\n            alert(111)\r\n            const { data } = await axios.put(\r\n                `http://localhost:5000/api/auth/resetpassword/${token}`,\r\n                {\r\n                    password,\r\n                },\r\n                config\r\n            );\r\n\r\n            console.log(data);\r\n            setSuccess(data.data);\r\n        } catch (error) {\r\n            setError(error.response.data.error);\r\n            setTimeout(() => {\r\n                setError(\"\");\r\n            }, 5000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"resetpassword-screen\">\r\n            <form\r\n                onSubmit={resetPasswordHandler}\r\n                className=\"resetpassword-screen__form\"\r\n            >\r\n                <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\r\n                {error && <span className=\"error-message\">{error} </span>}\r\n                {success && (\r\n                    <span className=\"success-message\">\r\n            {success} <Link to=\"/login\">Login</Link>\r\n          </span>\r\n                )}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">New Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        required\r\n                        id=\"password\"\r\n                        placeholder=\"Enter new password\"\r\n                        autoComplete=\"true\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        required\r\n                        id=\"confirmpassword\"\r\n                        placeholder=\"Confirm new password\"\r\n                        autoComplete=\"true\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Reset Password\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPasswordScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}